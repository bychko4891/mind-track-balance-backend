#!/bin/bash
set -e

# Створення баз даних
if [ -n "$POSTGRES_MULTIPLE_DATABASES" ]; then
    echo "Створюю наступні бази даних: $POSTGRES_MULTIPLE_DATABASES"
    for db in $(echo $POSTGRES_MULTIPLE_DATABASES | tr ',' ' '); do
        echo "Створюю базу даних $db"
        psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
            CREATE DATABASE $db;
EOSQL
    done
fi

# Створення користувачів і надання привілеїв
if [ -n "$POSTGRES_AUTH_USER" ] && [ -n "$POSTGRES_AUTH_PASSWORD" ]; then
    echo "Create user to db auth"
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        CREATE USER $POSTGRES_AUTH_USER WITH ENCRYPTED PASSWORD '$POSTGRES_AUTH_PASSWORD';
        ALTER USER $POSTGRES_AUTH_USER WITH SUPERUSER;
        ALTER USER $POSTGRES_AUTH_USER WITH CREATEDB;
        ALTER DATABASE auth OWNER TO $POSTGRES_AUTH_USER;
        GRANT ALL PRIVILEGES ON DATABASE auth TO $POSTGRES_AUTH_USER;
EOSQL
fi

if [ -n "$POSTGRES_USER_USER" ] && [ -n "$POSTGRES_USER_PASSWORD" ]; then
    echo "Create user to db user-details"
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        CREATE USER $POSTGRES_USER_USER WITH ENCRYPTED PASSWORD '$POSTGRES_USER_PASSWORD';
        ALTER USER $POSTGRES_USER_USER WITH SUPERUSER;
        ALTER USER $POSTGRES_USER_USER WITH CREATEDB;
        ALTER DATABASE user_details OWNER TO $POSTGRES_USER_USER;
        GRANT ALL PRIVILEGES ON DATABASE user_details TO $POSTGRES_USER_USER;

EOSQL
fi

if [ -n "$POSTGRES_WORD_LESSON_USER" ] && [ -n "$POSTGRES_WORD_LESSON_PASSWORD" ]; then
    echo "Create user to db word lesson"
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        CREATE USER $POSTGRES_WORD_LESSON_USER WITH ENCRYPTED PASSWORD '$POSTGRES_WORD_LESSON_PASSWORD';
        ALTER USER $POSTGRES_WORD_LESSON_USER WITH SUPERUSER;
        ALTER USER $POSTGRES_WORD_LESSON_USER WITH CREATEDB;
        ALTER DATABASE word_lesson OWNER TO $POSTGRES_WORD_LESSON_USER;
        GRANT ALL PRIVILEGES ON DATABASE word_lesson TO $POSTGRES_WORD_LESSON_USER;
EOSQL
fi

if [ -n "$POSTGRES_DICTIONARY_USER" ] && [ -n "$POSTGRES_DICTIONARY_PASSWORD" ]; then
    echo "Create user to db dictionary"
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        CREATE USER $POSTGRES_DICTIONARY_USER WITH ENCRYPTED PASSWORD '$POSTGRES_DICTIONARY_PASSWORD';
        ALTER USER $POSTGRES_DICTIONARY_USER WITH SUPERUSER;
        ALTER USER $POSTGRES_DICTIONARY_USER WITH CREATEDB;
        ALTER DATABASE dictionary OWNER TO $POSTGRES_DICTIONARY_USER;
        GRANT ALL PRIVILEGES ON DATABASE dictionary TO $POSTGRES_DICTIONARY_USER;
EOSQL
fi

if [ -n "$POSTGRES_MEDIA_USER" ] && [ -n "$POSTGRES_MEDIA_PASSWORD" ]; then
    echo "Create user to db media"
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        CREATE USER $POSTGRES_MEDIA_USER WITH ENCRYPTED PASSWORD '$POSTGRES_MEDIA_PASSWORD';
        ALTER USER $POSTGRES_MEDIA_USER WITH SUPERUSER;
        ALTER USER $POSTGRES_MEDIA_USER WITH CREATEDB;
        ALTER DATABASE media OWNER TO $POSTGRES_MEDIA_USER;
        GRANT ALL PRIVILEGES ON DATABASE media TO $POSTGRES_MEDIA_USER;
EOSQL
fi

if [ -n "$POSTGRES_GEMINI_USER" ] && [ -n "$POSTGRES_GEMINI_PASSWORD" ]; then
    echo "Create user to db media"
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        CREATE USER $POSTGRES_GEMINI_USER WITH ENCRYPTED PASSWORD '$POSTGRES_GEMINI_PASSWORD';
        ALTER USER $POSTGRES_GEMINI_USER WITH SUPERUSER;
        ALTER USER $POSTGRES_GEMINI_USER WITH CREATEDB;
        ALTER DATABASE gemini OWNER TO $POSTGRES_GEMINI_USER;
        GRANT ALL PRIVILEGES ON DATABASE gemini TO $POSTGRES_GEMINI_USER;
EOSQL
fi

if [ -n "$POSTGRES_INFO_USER" ] && [ -n "$POSTGRES_INFO_PASSWORD" ]; then
    echo "Create user to db media"
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        CREATE USER $POSTGRES_INFO_USER WITH ENCRYPTED PASSWORD '$POSTGRES_INFO_PASSWORD';
        ALTER USER $POSTGRES_INFO_USER WITH SUPERUSER;
        ALTER USER $POSTGRES_INFO_USER WITH CREATEDB;
        ALTER DATABASE info OWNER TO $POSTGRES_INFO_USER;
        GRANT ALL PRIVILEGES ON DATABASE info TO $POSTGRES_INFO_USER;
EOSQL
fi